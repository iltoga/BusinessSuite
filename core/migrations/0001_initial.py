# Generated by Django 4.2.1 on 2023-05-27 01:10

from django.db import migrations
from django.contrib.auth.models import Group, Permission

def generate_administrators(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='Administrators')

    # Add permissions to the group
    permissions = Permission.objects.all()
    for permission in permissions:
        group.permissions.add(permission)

# generate a group to edit all models
def generate_editors(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='Editors')

    # Add permissions to the group
    permissions = Permission.objects.filter(codename__in=['view_customer', 'change_customer', 'view_product', 'change_product', 'view_invoice', 'change_invoice', 'view_transaction', 'change_transaction', 'view_document', 'change_document'])
    for permission in permissions:
        group.permissions.add(permission)

# generate a group to view all models
def generate_viewers(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='Viewers')

    # Add permissions to the group
    permissions = Permission.objects.filter(codename__in=['view_customer', 'view_product', 'view_invoice', 'view_transaction', 'view_document'])
    for permission in permissions:
        group.permissions.add(permission)

# generate a group to create all models
def generate_creators(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='Creators')

    # Add permissions to the group
    permissions = Permission.objects.filter(codename__in=['add_customer', 'add_product', 'add_invoice', 'add_transaction', 'add_document'])
    for permission in permissions:
        group.permissions.add(permission)

# generate a group to delete all models
def generate_deleters(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='Deleters')

    # Add permissions to the group
    permissions = Permission.objects.filter(codename__in=['delete_customer', 'delete_product', 'delete_invoice', 'delete_transaction', 'delete_document'])
    for permission in permissions:
        group.permissions.add(permission)

def generate_power_users(apps, schema_editor):
    # Create a new group
    group = Group.objects.create(name='PowerUsers')

    # Get the other groups
    editors = Group.objects.get(name='Editors')
    viewers = Group.objects.get(name='Viewers')
    creators = Group.objects.get(name='Creators')
    deleters = Group.objects.get(name='Deleters')

    # Add all the permissions from those groups to PowerUsers
    for other_group in [editors, viewers, creators, deleters]:
        for permission in other_group.permissions.all():
            group.permissions.add(permission)

class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0001_initial'),
        ('products', '0001_initial'),
        ('invoices', '0001_initial'),
        ('transactions', '0001_initial'),
        ('docs_workflow', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(generate_administrators),
        migrations.RunPython(generate_editors),
        migrations.RunPython(generate_viewers),
        migrations.RunPython(generate_creators),
        migrations.RunPython(generate_deleters),
        migrations.RunPython(generate_power_users),
    ]
