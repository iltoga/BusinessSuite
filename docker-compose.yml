services:
  db:
    container_name: postgres-srv
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - dockernet
    volumes:
      - type: bind
        source: ${DB_PATH}
        target: /var/lib/postgresql/data
        bind:
          propagation: rslave

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASS}
    networks:
      - dockernet

  bs-cron:
    container_name: bs-cron
    depends_on:
      - bs-core
    image: 'bs-cron:custom'
    build:
      context: ./
      dockerfile: Dockerfile.cron
    networks:
      dockernet:
        ipv4_address: 192.168.2.61
    restart: unless-stopped

  memcached:
    image: 'bitnami/memcached:latest'
    networks:
      dockernet:
        ipv4_address: 192.168.2.62

  bs-core:
    container_name: bs-core
    depends_on:
      - memcached
      - db
    image: 'bs-core:custom'
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      dockernet:
        ipv4_address: 192.168.2.60
    volumes:
      - type: bind
        source: ./
        target: /usr/src/app
        bind:
          propagation: rslave
      - type: bind
        source: ${DATA_PATH}/media
        target: /media
        bind:
          propagation: rslave
      - type: bind
        source: ${DATA_PATH}/db
        target: /db
        bind:
          propagation: rslave
      - type: bind
        source: ${DATA_PATH}/logs
        target: /logs
        bind:
          propagation: rslave
      - type: bind
        source: ${DATA_PATH}/staticfiles
        target: /staticfiles
        bind:
          propagation: rslave
      - le-certs:/etc/letsencrypt
    restart: unless-stopped

networks:
  dockernet:
    external: true

volumes:
  le-certs:
    name: le-certs
    external: true
